import sys
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QHBoxLayout, QLabel, QComboBox, QSpacerItem, QSizePolicy
from PyQt5.QtGui import QPixmap

class MyWidget(QWidget):
    def __init__(self):
        super().__init__()

        # Создаем вертикальный layout
        main_layout = QVBoxLayout(self)

        # Верхняя часть с меткой и ComboBox
        top_layout = QHBoxLayout()

        # Добавляем метку с информацией из файла
        self.info_label_1 = QLabel(self.read_data_from_file(), self)

        # Добавляем выпадающий список
        self.satellite_combobox = QComboBox(self)
        self.satellite_combobox.addItems(["Кубсат 1", "Кубсат 2", "Кубсат 3"])

        # Подключаем слот для обработки изменений в QComboBox
        self.satellite_combobox.currentIndexChanged.connect(self.show_info)

        top_layout.addWidget(self.info_label_1)
        top_layout.addWidget(self.satellite_combobox)

        # Добавляем верхнюю часть в основной layout
        main_layout.addLayout(top_layout)

        # Добавляем отступ
        main_layout.addSpacing(10)

        # Добавляем изображение
        pixmap = QPixmap("test15.jpg")
        self.image_label = QLabel(self)
        self.image_label.setPixmap(pixmap)
        self.image_label.setAlignment(Qt.AlignCenter)  # Центрируем изображение

        # Добавляем изображение в основной layout
        main_layout.addWidget(self.image_label)

        # Добавляем отступ
        main_layout.addSpacing(10)

        # Добавляем метку для текста
        self.info_label_2 = QLabel("", self)
        self.info_label_2.setWordWrap(True)
        main_layout.addWidget(self.info_label_2)

        # Добавляем отступ
        main_layout.addSpacing(10)

        # Добавляем выпадающий список в основной layout
        main_layout.addWidget(self.satellite_combobox)

        # Устанавливаем layout для виджета
        self.setLayout(main_layout)

        # Устанавливаем размер окна
        self.setFixedSize(500, 500)

    def read_data_from_file(self):
        # Открываем файл и считываем его содержимое
        try:
            with open("test12.txt", "r", encoding="utf-8") as file:
                data = file.read()
            return data
        except FileNotFoundError:
            return "Файл не найден"

    def show_info(self):
        selected_satellite = self.satellite_combobox.currentText()

        # В зависимости от выбранного элемента, показываем соответствующую информацию
        if selected_satellite == "Кубсат 1":
            self.info_label_2.setText(
                "Высота над землей: 70км\nРасстояние до Кубсат 3: 67000км\nРасстояние до Кубсат 3: 300м")
        elif selected_satellite == "Кубсат 2":
            self.info_label_2.setText(
                "Высота над землей: 70км\nРасстояние до Кубсат 2: 300м\nРасстояние до Кубсат 3: 300м")
        elif selected_satellite == "Кубсат 3":
            self.info_label_2.setText(
                "Высота над землей: 70км\nРасстояние до Кубсат 1: 67000км\nРасстояние до Кубсат 3: 300м")

if __name__ == '__main__':
    app = QApplication(sys.argv)
    widget = MyWidget()
    widget.show()
    sys.exit(app.exec_())
